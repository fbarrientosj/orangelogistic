{"version":3,"sources":["Components/SimpleForm.js","Components/RegisterForm.js","Components/About.js","App.js","serviceWorker.js","index.js"],"names":["GoogleSpreadsheet","require","layout","labelCol","span","wrapperCol","tailLayout","offset","Demo","key","useState","passwordError","setError","loading","setloading","success","setsuccess","autoCompleteResult","setAutoCompleteResult","websiteOptions","map","email","label","value","passwordVerification","mail","password","a","creds","doc","sheet","useServiceAccountAuth","loadInfo","sheetsByIndex","getRows","rows","console","log","forEach","row","CryptoAES","decrypt","toString","CryptoENC","onFinish","values","pass","encrypt","toLowerCase","addRow","cantidad","retiro","format","fecha","moment","size","name","initialValues","remember","onFinishFailed","errorInfo","type","align","justify","Item","rules","message","required","options","onChange","domain","suffix","title","QuestionCircleOutlined","max","min","defaultValue","autoFocus","Password","style","color","class","htmlType","textAlign","Option","Select","residences","AutoComplete","children","formItemLayout","xs","sm","tailFormItemLayout","RegistrationForm","Form","useForm","form","direccion","residencia","join","nombre","apellido","celular","creacion","prefixSelector","noStyle","width","residence","prefix","scrollToFirstError","hasFeedback","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","addonBefore","About","id","pending","Header","Layout","Content","Footer","process","App","view","setview","position","zIndex","className","theme","mode","defaultSelectedKeys","onClick","padding","marginTop","margin","minHeight","RegisterForm","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.41aea117.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport moment from 'moment';\nimport { Form, Input, Button, InputNumber, AutoComplete, DatePicker, Spin, Tooltip } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport CryptoAES from 'crypto-js/aes';\nimport CryptoENC from 'crypto-js/enc-utf8';\n\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n\nconst layout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 4,\n    span: 8,\n  },\n};\n\n \n\nconst Demo = (key) => {\n  \n    const [passwordError, setError] = useState(false);\n    const [loading, setloading] = useState(false);\n    const [success, setsuccess] = useState(false);\n\n    const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n    const onWebsiteChange = value => {\n      if (!value) {\n        setAutoCompleteResult([]);\n      } else {\n        setAutoCompleteResult(['@gmail.com', '@uc.cl', '@udd.cl', '@uandes.cl'].map(domain => `${value}${domain}`));\n      }\n    };\n\n  const websiteOptions = autoCompleteResult.map(email => ({\n    label: email,\n    value: email,\n  }));\n\n    async function passwordVerification(mail, password) {\n    \n    var creds = require('../client_secret.json');\n    var doc = new GoogleSpreadsheet(key.sheet);\n    await doc.useServiceAccountAuth(creds);\n    await doc.loadInfo(); // loads document properties and worksheets\n    \n    const sheet = doc.sheetsByIndex[1];\n    \n    const rows = await sheet.getRows();\n    var success = false;\n    console.log('HOLA')\n    rows.forEach(row => {\n      console.log(row.password, password)\n        if (CryptoAES.decrypt(row.password, 'a').toString(CryptoENC) == CryptoAES.decrypt(password, 'a').toString(CryptoENC) && row.mail == mail){\n            success = true;\n        }}\n    )\n    return success;}\n\n    \n  \n\n  const onFinish = async values => {\n    setsuccess(false);\n    setloading(true);\n    var creds = require('../client_secret.json');\n    var doc = new GoogleSpreadsheet(key.sheet);\n    await doc.useServiceAccountAuth(creds);\n    await doc.loadInfo(); // loads document properties and worksheets\n    var pass = CryptoAES.encrypt(values.password, 'OrangeBussiness').toString();\n    let verification = await passwordVerification(values.mail.toLowerCase(), pass)\n\n    if (verification) {\n    const sheet = doc.sheetsByIndex[0];\n    const larryRow = await sheet.addRow({ mail: values.mail.toLowerCase(), cantidad: values.cantidad,\n        retiro: values.retiro.format('DD-MM-YYYY'), fecha: moment().format('DD-MM-YYYY')});\n    console.log('Success:', values);\n    setError(false);\n    setsuccess(true);\n    } else {\n        setError(true);\n        setsuccess(false);\n    }\n    setloading(false);\n  };\n\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  if (!loading){\n  return (\n    <div>\n    <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      type=\"flex\" \n      align=\"center\"\n      justify=\"center\" \n      align=\"middle\" \n      display='inline-block'\n>\n    <Form.Item\n        name=\"mail\"\n        label=\"E-mail\"\n        \n        rules={[\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail!',\n          },\n          {\n            required: true,\n            message: 'Please input your E-mail!',\n          },\n        ]}\n      > \n      \n        <AutoComplete options={websiteOptions} onChange={onWebsiteChange} >\n          <Input suffix='😊'/>\n        </AutoComplete>\n    \n      </Form.Item>\n\n      <Form.Item\n        label={\n          <span>\n            Número de cajas&nbsp;\n            <Tooltip title=\"Máximo de 30 cajas\">\n              <QuestionCircleOutlined />\n            </Tooltip>\n          </span>\n        }\n        name=\"cantidad\"\n        rules={[\n          {\n            required: true,\n            message: 'Te falta agregar el número de cajas a pedir',\n          },\n        ]}\n      >\n        <InputNumber max={30} min={1} defaultValue={1} size='large' autoFocus={true}/>\n      </Form.Item>\n\n      <Form.Item label=\"Cuándo retirarás?\" \n      name=\"retiro\"\n      rules={[\n          {\n            required: true,\n            message: 'Agrega la fecha de retiro',\n          },\n        ]}>\n          <DatePicker />\n        </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Ingresa la contraseña',\n          },\n          { defaultValue: 1 }\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n      <b style={{color:'red'}} >{passwordError ? 'Contraseña o nombre erróneo' : ''}</b> \n      <b style={{color:'green'}} class='centered' >{success ? 'Pedido creado con éxito' : ''}</b> \n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" style={{ textAlign: 'center' }}>\n          Submit\n        </Button>\n      </Form.Item>\n      \n    </Form>\n    \n    </div>\n\n\n  )\n}else{\n    return (<Spin size='large' />)\n}}\n\n\n\nexport default Demo;\n","import React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  Tooltip,\n  Cascader,\n  Select,\n  Row,\n  Spin,\n  Checkbox,\n  Button,\n  AutoComplete,\n} from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport CryptoAES from 'crypto-js/aes';\n\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\nconst residences = [\n  {\n    value: 'Las Condes',\n    label: 'Las Condes',\n    children: [\n      {\n        value: 'Los Dominicos',\n        label: 'Los Dominicos',\n      },\n      {\n        value: 'San Damián',\n        label: 'San Damián',\n      },\n      {\n        value: 'Sector Escuela Militar',\n        label: 'Sector Escuela Militar',\n      },\n      {\n        value: 'Sector Rotonda Atenas',\n        label: 'Sector Rotonda Atenas',\n      },\n      {\n        value: 'Otro',\n        label: 'Otro',\n      },\n    ],\n  },\n  {\n    value: 'Lo Barnechea',\n    label: 'Lo Barnechea',\n    children: [\n      {\n        value: 'Los Trapenses',\n        label: 'Los Trapenses',\n      },\n      {\n        value: 'El Huinganal',\n        label: 'El Huinganal',\n      },\n      {\n        value: 'Otro',\n        label: 'Otro',\n      },\n    ],\n  },\n  {\n      value: 'Providencia',\n      label: 'Providencia'\n  },\n  {\n    value: 'Ñuñoa',\n    label: 'Ñuñoa'\n},\n{\n    value: 'Vitacura',\n    label: 'Vitacura',\n    children: [\n        {\n          value: 'Sector clínica Alemana',\n          label: 'Sector clínica Alemana',\n        },\n        {\n          value: 'Sector Santa María Manquehue',\n          label: 'Sector Santa María Manquehue',\n        },\n        {\n          value: 'Otro',\n          label: 'Otro',\n        },\n      ],\n},\n{\n    value: 'Peñalolén',\n    label: 'Peñalolén'\n},\n{\n    value: 'Otro',\n    label: 'Otro'\n},\n];\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 1,\n    },\n    sm: {\n      span: 6,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 5,\n    },\n    sm: {\n      span: 12,\n    },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 5,\n      offset: 0,\n    },\n    sm: {\n      span: 6,\n      offset: 5,\n    },\n  },\n};\n\nconst RegistrationForm = (key) => {\n  const [form] = Form.useForm();\n  const [loading, setloading] = useState(false);\n  const [success, setsuccess] = useState(false);\n\n  const onFinish = async values => {\n    setsuccess(false);\n    setloading(true);\n    var creds = require('../client_secret.json');  \n    var doc = new GoogleSpreadsheet(key.sheet);\n    await doc.useServiceAccountAuth(creds);\n    await doc.loadInfo(); // loads document properties and worksheets\n    const sheet = doc.sheetsByIndex[1];\n    let direccion = values.residencia.join('-')\n    var pass = CryptoAES.encrypt(values.password, 'a').toString();\n    const larryRow = await sheet.addRow({ nombre: values.nombre, mail: values.mail.toLowerCase(),\n        apellido: values.apellido, residencia: direccion, celular: values.celular,\n         password: pass, creacion: moment().format('DD-MM-YYYY')});\n    setloading(false);\n    setsuccess(true);\n  };\n\n  const prefixSelector = (\n    <Form.Item name=\"prefix\" noStyle>\n      <Select\n        style={{\n          width: 80,\n        }}\n      >\n        <Option value=\"+569\">+569</Option>\n      </Select>\n    </Form.Item>\n  );\n\n\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n  const onWebsiteChange = value => {\n    if (!value) {\n      setAutoCompleteResult([]);\n    } else {\n      setAutoCompleteResult(['@gmail.com', '@uc.cl', '@udd.cl', '@uandes.cl'].map(domain => `${value}${domain}`));\n    }\n  };\n\n  const websiteOptions = autoCompleteResult.map(mail => ({\n    label: mail,\n    value: mail,\n  }));\n\n  if (loading){\n    return (<Spin size='large' />)\n  } else {\n  return (\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"register\"\n      onFinish={onFinish}\n      initialValues={{\n        residence: ['Comuna', 'Sector'],\n        prefix: '+569',\n      }}\n      scrollToFirstError\n    >\n\n    <Form.Item\n        name=\"nombre\"\n        label=\"Nombre\"\n        \n        rules={[\n          {\n            required: true,\n            message: 'Agrega tu nombre',\n          },\n        ]}\n      > \n          <Input suffix='😊'/>\n      </Form.Item>\n      <Form.Item\n        name=\"apellido\"\n        label=\"Apellido\"\n        \n        rules={[\n          {\n            required: true,\n            message: 'Agrega tu apellido',\n          },\n        ]}\n      > \n          <Input suffix='😊'/>\n      </Form.Item>\n\n      <Form.Item\n        name=\"mail\"\n        label=\"E-mail\"\n        \n        rules={[\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail!',\n          },\n          {\n            required: true,\n            message: 'Please input your E-mail!',\n          },\n        ]}\n      > \n      \n        <AutoComplete options={websiteOptions} onChange={onWebsiteChange} >\n          <Input suffix='📧'/>\n        </AutoComplete>\n    \n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n          { min: 6, message: 'La contraseña debe tener más de 6 caracteres' },\n        ]}\n        hasFeedback\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label=\"Confirm Password\"\n        dependencies={['password']}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password!',\n          },\n          ({ getFieldValue }) => ({\n            validator(rule, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject('The two passwords that you entered do not match!');\n            },\n          }),\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"residencia\"\n        label=\"Lugar de residencia\"\n        rules={[\n          {\n            type: 'array',\n            required: true,\n            message: 'Please select your habitual residence!',\n          },\n        ]}\n      >\n        <Cascader options={residences} />\n      </Form.Item>\n\n      <Form.Item\n        name=\"celular\"\n        label=\"Celular\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your phone number!',\n          },\n          { min: 8, message: 'El número debe contener 8 dígitos' },\n          { max: 8, message: 'El número debe contener 8 dígitos' },\n        ]}\n      >\n        <Input\n          addonBefore={prefixSelector}\n          suffix='☎️'\n          style={{\n            width: '100%',\n          }}\n        />\n      </Form.Item>\n      <b style={{color:'green'}} class='centered' >{success ? 'Cuenta creada con éxito' : ''}</b> \n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" >\n          Register\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}};\n\nexport default RegistrationForm;","import React from 'react';\nimport { Carousel, Timeline } from 'antd';\nimport { motion } from \"framer-motion\";\n\n\nconst About = () => {\n\n    return (\n  <div id=\"container\">\n    \n      <h1>Cómo ganar vendiendo naranjas?</h1>\n      <hr></hr>\n      <br></br>\n      <Timeline pending=\"Ganando 🤑 \" >\n\n        <Timeline.Item color='red'>Créate una cuenta</Timeline.Item>\n        <Timeline.Item color='red'>Haz tu pedido</Timeline.Item>\n        <Timeline.Item color='red'>Espera confirmación de aceptación de pedido vía whatsapp</Timeline.Item>\n        <Timeline.Item color='red'>Retira en la dirección indicada</Timeline.Item>\n        <Timeline.Item color='red'>Entrega cliente final</Timeline.Item>\n        <Timeline.Item color='green'>\n        <p>Deposita la diferencia en nuestra cuenta\n        (en un máximo de</p>\n        <p>7 días después del retiro de la fruta)</p> </Timeline.Item>\n      </Timeline>\n    </div>\n    )};\n\nexport default About;\n","import React, {useState} from 'react';\nimport { Button } from 'antd';\nimport './App.less';\n\nimport { Layout, Menu, Breadcrumb } from 'antd';\n\nimport DeliveryForm from './Components/SimpleForm';\nimport RegisterForm from './Components/RegisterForm';\nimport About from './Components/About';\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\nconst { Header, Content, Footer } = Layout;\nconst key = {'sheet': process.env.REACT_APP_1_API_KEY, 'encryption':  process.env.REACT_APP_2_API_KEY};\nfunction App() {\n\n  const [view, setview] = useState('about');\n  \n  return (\n  <Layout>\n    <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n      <div className=\"logo\" />\n      <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n        <Menu.Item onClick={() => setview('about')} key=\"1\">About</Menu.Item>\n        <Menu.Item onClick={() => setview('signin')} key=\"2\">Haz un pedido</Menu.Item>\n        <Menu.Item onClick={() => setview('delivery')} key=\"3\">Regístrate como vendedor</Menu.Item>\n      </Menu>\n    </Header>\n    <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\n      <Breadcrumb style={{ margin: '16px 0' }}>\n      \n        {view === 'about' ? <Breadcrumb.Item></Breadcrumb.Item> : ''}\n        {view === 'signin' ?<Breadcrumb.Item>Regístrate y comienza a vender</Breadcrumb.Item> : ''}\n        {view === 'delivery' ? <Breadcrumb.Item>Recuerda que tienes que estar registrado para hacer un pedido!</Breadcrumb.Item> : ''}\n      </Breadcrumb>\n      <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\n        {view === 'about' ? <About></About> : ''}\n        {view === 'signin' ? <DeliveryForm {...key}></DeliveryForm> : ''}\n        {view === 'delivery' ? <RegisterForm {...key}></RegisterForm> : ''}\n  \n      </div>\n    </Content>\n    <Footer style={{ textAlign: 'center' }}>Cualquier duda mándame un whatsapp +56965688057 😊</Footer>\n\n  </Layout>\n  \n);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
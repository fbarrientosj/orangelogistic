{"version":3,"sources":["img/1.pdf","img/2.pdf","img/min3.png","img/4.png","Components/SimpleForm.js","Components/RegisterForm.js","Components/About.js","Components/Flyers.js","Components/Faq.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Option","require","GoogleSpreadsheet","Select","Demo","Item","key","useState","loading","autoCompleteResult","map","email","label","value","size","style","color","residences","AutoComplete","children","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegistrationForm","Form","useForm","form","setloading","success","setsuccess","onFinish","values","a","creds","doc","sheet","useServiceAccountAuth","loadInfo","sheetsByIndex","direccion","residencia","join","pass","CryptoAES","encrypt","password","encryption","toString","addRow","nombre","mail","toLowerCase","apellido","celular","creacion","moment","format","instagram","prefixSelector","name","noStyle","width","setAutoCompleteResult","websiteOptions","class","initialValues","residence","prefix","scrollToFirstError","rules","required","message","suffix","type","options","onChange","domain","min","hasFeedback","Password","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","max","addonBefore","htmlType","About","id","pending","data","title","photo","Flyers","itemLayout","dataSource","renderItem","item","Meta","avatar","src","href","download","description","desc","questionmark","Faq","Header","Layout","Content","Footer","process","App","view","setview","position","zIndex","className","theme","mode","defaultSelectedKeys","onClick","padding","marginTop","margin","minHeight","RegisterForm","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.b55694ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.409476e9.pdf\";","module.exports = __webpack_public_path__ + \"static/media/2.5e904b6a.pdf\";","module.exports = __webpack_public_path__ + \"static/media/min3.e09842f8.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e8f189c4.png\";","import React, {useState} from 'react';\nimport moment from 'moment';\nimport { Form, Input, Button, InputNumber, AutoComplete, Cascader, Spin, Tooltip, Select } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport CryptoAES from 'crypto-js/aes';\nimport CryptoENC from 'crypto-js/enc-utf8';\n\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n\n\nconst { Option } = Select;\n\nconst layout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 11,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 4,\n    span: 8,\n  },\n};\n\nconst prefixSelector = (\n  <Form.Item name=\"prefix\" noStyle>\n    <Select\n      style={{\n        width: 80,\n      }}\n    >\n      <Option value=\"+569\">+569</Option>\n    </Select>\n  </Form.Item>\n);\n\nconst residences = [\n  {\n    value: 'Las Condes',\n    label: 'Las Condes'\n  },\n  {\n    value: 'Lo Barnechea',\n    label: 'Lo Barnechea',\n  },\n{\n    value: 'Vitacura',\n    label: 'Vitacura',\n},\n{\n    value: 'Peñalolén',\n    label: 'Peñalolén'\n}, \n{\n  value: 'Chicureo',\n  label: 'Chicureo'\n}\n];\n\n \n\nconst Demo = (key) => {\n  \n    const [passwordError, setError] = useState(false);\n    const [loading, setloading] = useState(false);\n    const [success, setsuccess] = useState(false);\n\n    const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n    const onWebsiteChange = value => {\n      if (!value) {\n        setAutoCompleteResult([]);\n      } else {\n        setAutoCompleteResult(['@gmail.com', '@uc.cl', '@udd.cl', '@uandes.cl'].map(domain => `${value}${domain}`));\n      }\n    };\n\n  const websiteOptions = autoCompleteResult.map(email => ({\n    label: email,\n    value: email,\n  }));\n\n    async function passwordVerification(mail, password) {\n    \n    var creds = require('../client_secret.json');\n    var doc = new GoogleSpreadsheet(key.sheet);\n    await doc.useServiceAccountAuth(creds);\n    await doc.loadInfo(); // loads document properties and worksheets\n    \n    const sheet = doc.sheetsByIndex[1];\n    \n    const rows = await sheet.getRows();\n    var success = false;\n    console.log('HOLA')\n    \n    rows.forEach(row => {\n      \n        if (row.mail == mail){\n            success = true;\n        }}\n    )\n    return success;}\n\n    \n  \n\n  const onFinish = async values => {\n    setsuccess(false);\n    setloading(true);\n    var creds = require('../client_secret.json');\n    var doc = new GoogleSpreadsheet(key.sheet);\n    await doc.useServiceAccountAuth(creds);\n    await doc.loadInfo(); // loads document properties and worksheets\n    var pass = CryptoAES.encrypt(values.password, 'OrangeBussiness').toString();\n    let verification = await passwordVerification(values.mail.toLowerCase(), pass)\n\n    if (verification) {\n    const sheet = doc.sheetsByIndex[0];\n    let comuna_fixed = values.comuna.join('')\n    const larryRow = await sheet.addRow({ mail: values.mail.toLowerCase(), cliente: values.cliente,\n        celular: values.celular, fecha: moment().format('DD-MM-YYYY'), calle: values.calle, \n        numero: values.numero, departamento: values.departamento, comuna: comuna_fixed,  \n        observacion: values.observacion });\n    console.log('Success:');\n    setError(false);\n    setsuccess(true);\n    } else {\n        setError(true);\n        setsuccess(false);\n    }\n    setloading(false);\n  };\n\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  if (!loading){\n  return (\n    <div>\n      <h1 style={{color:'red'}} >Lamentablemente estamos fuera de stock! Más actualizaciones en los próximos días!</h1> \n    </div>\n  )\n}else{\n    return (<Spin size='large' />)\n}}\n\n\n\nexport default Demo;\n","import React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  Tooltip,\n  Cascader,\n  Select,\n  Row,\n  Spin,\n  Checkbox,\n  Button,\n  AutoComplete,\n} from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport CryptoAES from 'crypto-js/aes';\n\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\nconst residences = [\n  {\n    value: 'Las Condes',\n    label: 'Las Condes',\n    children: [\n      {\n        value: 'Los Dominicos',\n        label: 'Los Dominicos',\n      },\n      {\n        value: 'San Damián',\n        label: 'San Damián',\n      },\n      {\n        value: 'Sector Escuela Militar',\n        label: 'Sector Escuela Militar',\n      },\n      {\n        value: 'Sector Rotonda Atenas',\n        label: 'Sector Rotonda Atenas',\n      },\n      {\n        value: 'Otro',\n        label: 'Otro',\n      },\n    ],\n  },\n  {\n    value: 'Lo Barnechea',\n    label: 'Lo Barnechea',\n    children: [\n      {\n        value: 'Los Trapenses',\n        label: 'Los Trapenses',\n      },\n      {\n        value: 'El Huinganal',\n        label: 'El Huinganal',\n      },\n      {\n        value: 'Otro',\n        label: 'Otro',\n      },\n    ],\n  },\n  {\n      value: 'Providencia',\n      label: 'Providencia'\n  },\n  {\n    value: 'Ñuñoa',\n    label: 'Ñuñoa'\n},\n{\n    value: 'Vitacura',\n    label: 'Vitacura',\n    children: [\n        {\n          value: 'Sector clínica Alemana',\n          label: 'Sector clínica Alemana',\n        },\n        {\n          value: 'Sector Santa María Manquehue',\n          label: 'Sector Santa María Manquehue',\n        },\n        {\n          value: 'Otro',\n          label: 'Otro',\n        },\n      ],\n},\n{\n    value: 'Peñalolén',\n    label: 'Peñalolén'\n},\n{\n    value: 'Otro',\n    label: 'Otro'\n},\n];\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 1,\n    },\n    sm: {\n      span: 6,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 5,\n    },\n    sm: {\n      span: 11,\n    },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 5,\n      offset: 0,\n    },\n    sm: {\n      span: 6,\n      offset: 5,\n    },\n  },\n};\n\nconst RegistrationForm = (key) => {\n  const [form] = Form.useForm();\n  const [loading, setloading] = useState(false);\n  const [success, setsuccess] = useState(false);\n\n  const onFinish = async values => {\n    setsuccess(false);\n    setloading(true);\n    var creds = require('../client_secret.json');  \n    var doc = new GoogleSpreadsheet(key.sheet);\n    await doc.useServiceAccountAuth(creds);\n    await doc.loadInfo(); // loads document properties and worksheets\n    const sheet = doc.sheetsByIndex[1];\n    let direccion = values.residencia.join('-')\n    var pass = CryptoAES.encrypt(values.password, key.encryption).toString();\n    const larryRow = await sheet.addRow({ nombre: values.nombre, mail: values.mail.toLowerCase(),\n        apellido: values.apellido, residencia: direccion, celular: values.celular,\n         password: pass, creacion: moment().format('DD-MM-YYYY'), instagram : values.instagram});\n    setloading(false);\n    setsuccess(true);\n  };\n\n  const prefixSelector = (\n    <Form.Item name=\"prefix\" noStyle>\n      <Select\n        style={{\n          width: 80,\n        }}\n      >\n        <Option value=\"+569\">+569</Option>\n      </Select>\n    </Form.Item>\n  );\n\n\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n  const onWebsiteChange = value => {\n    if (!value) {\n      setAutoCompleteResult([]);\n    } else {\n      setAutoCompleteResult(['@gmail.com', '@uc.cl', '@udd.cl', '@uandes.cl'].map(domain => `${value}${domain}`));\n    }\n  };\n\n  const websiteOptions = autoCompleteResult.map(mail => ({\n    label: mail,\n    value: mail,\n  }));\n\n  if (loading){\n    return (<Spin size='large' />)\n  } else {\n  return (\n    <div>\n    <h1 style={{color:'green'}} class='centered' >{success ? 'Cuenta creada con éxito' : ''}</h1> \n\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"register\"\n      onFinish={onFinish}\n      initialValues={{\n        residence: ['Comuna', 'Sector'],\n        prefix: '+569',\n      }}\n      scrollToFirstError\n    >\n\n    <Form.Item\n        name=\"nombre\"\n        label=\"Nombre\"\n        \n        rules={[\n          {\n            required: true,\n            message: 'Agrega tu nombre',\n          },\n        ]}\n      > \n          <Input suffix='😊'/>\n      </Form.Item>\n      <Form.Item\n        name=\"apellido\"\n        label=\"Apellido\"\n        \n        rules={[\n          {\n            required: true,\n            message: 'Agrega tu apellido',\n          },\n        ]}\n      > \n          <Input suffix='😊'/>\n      </Form.Item>\n      <Form.Item\n        name=\"instagram\"\n        label=\"Instagram\"\n        \n        rules={[\n          {\n            required: true,\n            message: 'Agrega tu cuenta de instagram',\n          },\n        ]}\n      > \n          <Input suffix='✅' prefix='@'/>\n      </Form.Item>\n\n      <Form.Item\n        name=\"mail\"\n        label=\"E-mail\"\n        \n        rules={[\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail!',\n          },\n          {\n            required: true,\n            message: 'Please input your E-mail!',\n          },\n        ]}\n      > \n      \n        <AutoComplete options={websiteOptions} onChange={onWebsiteChange} >\n          <Input suffix='📧'/>\n        </AutoComplete>\n    \n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n          { min: 6, message: 'La contraseña debe tener más de 6 caracteres' },\n        ]}\n        hasFeedback\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label=\"Confirm Password\"\n        dependencies={['password']}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password!',\n          },\n          ({ getFieldValue }) => ({\n            validator(rule, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject('The two passwords that you entered do not match!');\n            },\n          }),\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"residencia\"\n        label=\"Lugar de residencia\"\n        rules={[\n          {\n            type: 'array',\n            required: true,\n            message: 'Please select your habitual residence!',\n          },\n        ]}\n      >\n        <Cascader options={residences} />\n      </Form.Item>\n\n      <Form.Item\n        name=\"celular\"\n        label=\"Celular\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your phone number!',\n          },\n          { min: 8, message: 'El número debe contener 8 dígitos' },\n          { max: 8, message: 'El número debe contener 8 dígitos' },\n        ]}\n      >\n        <Input\n          addonBefore={prefixSelector}\n          suffix='☎️'\n          style={{\n            width: '100%',\n          }}\n        />\n      </Form.Item>\n      \n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" >\n          Register\n        </Button>\n      </Form.Item>\n    </Form>\n    </div>\n  );\n}};\n\nexport default RegistrationForm;","import React from 'react';\nimport { Carousel, Timeline } from 'antd';\nimport { motion } from \"framer-motion\";\n\n\nconst About = () => {\n\n    return (\n  <div id=\"container\">\n    \n      <h1>🍊 Cómo ganar vendiendo naranjas?</h1>\n      <hr></hr>\n      <br></br>\n      <p>Ganar dinero vendiendo naranjas es muy simple. Debes gestionar la venta de cajas de naranjas de 15 kilos \n        a tus contactos. Tú solo debes generar el pedido y nosotros nos encargamos del despacho. Tu ganarás una comisión variable\n        dependiendo de tu precio de venta (más detalles en FAQ). Para comenzar a ganar solo debes seguir los siguientes pasos:\n      </p>\n      <br></br>\n      <Timeline pending=\"Ganando 🤑 \" >\n\n        <Timeline.Item color='#FF0000'>Créate una cuenta</Timeline.Item>\n        <Timeline.Item color='#FF3300'>Lee el FAQ de la página! (MUY IMPORTANTE)</Timeline.Item>\n        <Timeline.Item color='#ff6600'>Ingresa un pedido y la información del despacho</Timeline.Item>\n        <Timeline.Item color='#ff9900'>Espera confirmación de aceptación de pedido vía whatsapp</Timeline.Item>\n        <Timeline.Item color='#FFCC00'>Recibe el pago del cliente por la caja</Timeline.Item>\n        <Timeline.Item color='#FFFF00'><p>Deposítanos en nuestra cuenta</p> </Timeline.Item>\n      </Timeline>\n    </div>\n    )};\n\nexport default About;\n","import React, {useState} from 'react';\nimport { List, Avatar } from 'antd';\n\nconst data = [\n  {\n    title: 'Historia Instagram 1',\n    photo: require('../img/1.pdf')\n  },\n  {\n    title: 'Historia Instagram 2',\n    photo: require('../img/2.pdf')\n  },\n  {\n    title: 'Post Instagram 1',\n    photo: require('../img/min3.png')\n  }\n];\nconst Flyers = () => {\n\n    return (\n        <List\n        itemLayout=\"horizontal\"\n        dataSource={data}\n        renderItem={item => (\n          <List.Item>\n            <List.Item.Meta\n              avatar={<Avatar src={item.photo} />}\n              title={<a href={item.photo} download>{item.title}</a>}\n              description=\"Recuerda agregar tus datos de contacto al pie de la imagen\"\n            />\n          </List.Item>\n        )}\n      />\n    )};\n\n\nexport default Flyers;","import React, {useState} from 'react';\nimport { List, Avatar } from 'antd';\n\nconst data = [\n  {\n    title: '¿Cuánto ganaré por caja vendida?',\n    desc: 'Lo que ganes dependerá de tu precio de venta. Tú debes devolverme $12.000 pesos por caja por lo que ganes dependerá de tu precio de venta.',\n  },\n  {\n    title: '¿Existe algún precio sugerido?',\n    desc: 'Se recomienda vender la caja en $16.000 dado este es un precio bastante menor a los supermercados y es más bajo que la competencia.'\n  },\n  {\n    title: '¿Cuánto pesa cada caja?',\n    desc: 'Cada caja pesa 15 kilos (+-500 gramos).'\n  }, \n  {\n    title: '¿Me cobrarán el delivery?',\n    desc: 'No, está incluído en los $12.000'\n  }, \n  {\n    title: '¿Qué pasa si se despacha una caja y no hay nadie en el domicilio',\n    desc: 'Se te recargarán $2.000 que equivale al precio de despacho.'\n  }, \n  {\n    title: '¿Cúando se despacharán las cajas?',\n    desc: 'Por ahora la fecha es variable. Puede ser desde el domingo 14 de junio hasta el viernes 19 de junio. Más actualizaciones serán enviadas por interno a los vendedores dependiendo de cada pedido.'\n  }, \n  {\n    title: '¿Dónde encuentro flyers para promocionar las cajas?',\n    desc: 'En una de las pestañas de esta página existen algunos flyers pre hechos (recuerda agregarles tus datos de contacto). Si te motivas puedes crear tus propios anuncios.'\n  }, \n  {\n    title: '¿Las naranjas son de jugo o de mesa?',\n    desc: 'Estas naranjas son un híbrido. Poseen mucho jugo pero también son muy dulces para comerse directamente.'\n  }, \n  {\n    title: '¿De dónde vienen las naranjas y de qué calidad son?',\n    desc: 'Provienen del fundo San Antonio, ubicado en la localidad de Pichidegua (sexta región). Son de calidad exportación.'\n  }, \n  {\n    title: '¿Recibiré comisión si la venta no se efectúa?',\n    desc: 'No. Eso sí, se el camión fue a despachar el pedido y no se efectuó la venta, se te cargarán $2000 :('\n  }\n];\nlet questionmark = require('../img/4.png')\n\n\nconst Faq = () => {\n\n    return (\n        <List\n        itemLayout=\"horizontal\"\n        dataSource={data}\n        renderItem={item => (\n          <List.Item>\n            <List.Item.Meta\n              avatar={<Avatar src={questionmark} />}\n              title={item.title}\n              description={item.desc}\n            />\n          </List.Item>\n        )}\n      />\n    )};\n\n\nexport default Faq;","import React, {useState} from 'react';\nimport { Button } from 'antd';\nimport './App.less';\n\nimport { Layout, Menu, Breadcrumb } from 'antd';\n\nimport DeliveryForm from './Components/SimpleForm';\nimport RegisterForm from './Components/RegisterForm';\nimport About from './Components/About';\nimport Flyers from './Components/Flyers';\nimport Faq from './Components/Faq';\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\nconst { Header, Content, Footer } = Layout;\nconst key = {'sheet': process.env.REACT_APP_1_API_KEY, 'encryption':  process.env.REACT_APP_2_API_KEY};\nfunction App() {\n\n  const [view, setview] = useState('about');\n  \n  return (\n  <Layout>\n    <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n      <div className=\"logo\" /> \n      <Menu theme=\"dark\" mode=\"horizontal\" title=\"🍊\" defaultSelectedKeys={['1']}>\n        <Menu.Item onClick={() => setview('about')} key=\"1\">🍊 Cómo funciona?</Menu.Item>\n        <Menu.Item onClick={() => setview('signin')} key=\"2\">Haz un pedido</Menu.Item>\n        <Menu.Item onClick={() => setview('delivery')} key=\"3\">Regístrate como vendedor</Menu.Item>\n        <Menu.Item onClick={() => setview('flyers')} key=\"4\">Flyers</Menu.Item>\n        <Menu.Item onClick={() => setview('Faq')} key=\"5\">FAQ</Menu.Item>\n      </Menu>\n    </Header>\n    <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\n      <Breadcrumb style={{ margin: '16px 0' }}>\n      \n        {view === 'about' ? <Breadcrumb.Item></Breadcrumb.Item> : ''}\n        {view === 'signin' ?<Breadcrumb.Item>Regístrate y comienza a vender</Breadcrumb.Item> : ''}\n        {view === 'delivery' ? <Breadcrumb.Item>Recuerda que tienes que estar registrado para hacer un pedido!</Breadcrumb.Item> : ''}\n        {view === 'flyers' ? <Breadcrumb.Item>Algunos anuncios que puedes publicar en redes sociales</Breadcrumb.Item> : ''}\n        {view === 'Faq' ? <Breadcrumb.Item>Por favor lee cada una de las preguntas y respuestas</Breadcrumb.Item> : ''}\n      </Breadcrumb>\n      <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\n        {view === 'about' ? <About></About> : ''}\n        {view === 'signin' ? <DeliveryForm {...key}></DeliveryForm> : ''}\n        {view === 'delivery' ? <RegisterForm {...key}></RegisterForm> : ''}\n        {view === 'flyers' ? <Flyers {...key}></Flyers> : ''}\n        {view === 'Faq' ? <Faq {...key}></Faq> : ''}\n  \n      </div>\n    </Content>\n    <Footer style={{ textAlign: 'center' }}>Cualquier duda mándame un whatsapp +56965688057 😊</Footer>\n\n  </Layout>\n  \n);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}